


// void main() {
//   // debugPaintSizeEnabled = true;
//   runApp(MyApp());
// }

// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     Widget titleSection = Container(
//       padding: const EdgeInsets.all(32),
//       child: Row(
//         children: [
//           Expanded(
//             /*1*/
//             child: Column(
//               crossAxisAlignment: CrossAxisAlignment.start,
//               children: [
//                 /*2*/
//                 Container(
//                   padding: const EdgeInsets.only(bottom: 8),
//                   child: Text(
//                     'Oeschinen Lake Campground',
//                     style: TextStyle(
//                       fontWeight: FontWeight.bold,
//                     ),
//                   ),
//                 ),
//                 Text(
//                   'Kandersteg, Switzerland',
//                   style: TextStyle(
//                     color: Colors.grey[500],
//                   ),
//                 ),
//               ],
//             ),
//           ),
//           /*3*/
//           Icon(
//             Icons.star,
//             color: Colors.red[500],
//           ),
//           Text('41'),
//         ],
//       ),
//     );

//     Color color = Theme.of(context).primaryColor;

//     Widget buttonSection = Container(
//       child: Row(
//         mainAxisAlignment: MainAxisAlignment.spaceEvenly,
//         children: [
//           _buildButtonColumn(color, Icons.call, 'CALL'),
//           _buildButtonColumn(color, Icons.near_me, 'ROUTE'),
//           _buildButtonColumn(color, Icons.share, 'SHARE'),
//         ],
//       ),
//     );

//     Widget textSection = Container(
//       padding: const EdgeInsets.all(32),
//       child: Text(
//         'Lake Oeschinen lies at the foot of the Blüemlisalp in the Bernese '
//             'Alps. Situated 1,578 meters above sea level, it is one of the '
//             'larger Alpine Lakes. A gondola ride from Kandersteg, followed by a '
//             'half-hour walk through pastures and pine forest, leads you to the '
//             'lake, which warms to 20 degrees Celsius in the summer. Activities '
//             'enjoyed here include rowing, and riding the summer toboggan run.',
//         softWrap: true,
//       ),
//     );

//     return MaterialApp(
//       title: 'Flutter layout demo',
//       home: Scaffold(
//         appBar: AppBar(
//           title: Text('Flutter layout demo'),
//         ),
//         body: ListView(
//           children: [
//             Image.asset(
//               'images/lake.jpg',
//               width: 600,
//               height: 240,
//               fit: BoxFit.cover,
//             ),
//             titleSection,
//             buttonSection,
//             textSection,
//           ],
//         ),
//       ),
//     );
//   }

//   Column _buildButtonColumn(Color color, IconData icon, String label) {
//     return Column(
//       mainAxisSize: MainAxisSize.min,
//       mainAxisAlignment: MainAxisAlignment.center,
//       children: [
//         Icon(icon, color: color),
//         Container(
//           margin: const EdgeInsets.only(top: 8),
//           child: Text(
//             label,
//             style: TextStyle(
//               fontSize: 12,
//               fontWeight: FontWeight.w400,
//               color: color,
//             ),
//           ),
//         ),
//       ],
//     );
//   }
// }




















//=================
//WebSocket
//=================

// import 'package:flutter/foundation.dart';
// import 'package:web_socket_channel/io.dart';
// import 'package:flutter/material.dart';
// import 'package:web_socket_channel/web_socket_channel.dart';

// void main() => runApp(new MyApp());

// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     final title = 'WebSocket Demo';
//     return new MaterialApp(
//       title: title,
//       home: new MyHomePage(
//         title: title,
//         channel: new IOWebSocketChannel.connect('ws://echo.websocket.org'),
//       ),
//     );
//   }
// }

// class MyHomePage extends StatefulWidget {
//   final String title;
//   final WebSocketChannel channel;

//   MyHomePage({Key key, @required this.title, @required this.channel})
//       : super(key: key);

//   @override
//   _MyHomePageState createState() => new _MyHomePageState();
// }

// class _MyHomePageState extends State<MyHomePage> {
//   TextEditingController _controller = new TextEditingController();

//   @override
//   Widget build(BuildContext context) {
//     return new Scaffold(
//       appBar: new AppBar(
//         title: new Text(widget.title),
//       ),
//       body: new Padding(
//         padding: const EdgeInsets.all(20.0),
//         child: new Column(
//           crossAxisAlignment: CrossAxisAlignment.start,
//           children: <Widget>[
//             new Form(
//               child: new TextFormField(
//                 controller: _controller,
//                 decoration: new InputDecoration(labelText: 'Send a message'),
//               ),
//             ),
//             new StreamBuilder(
//               stream: widget.channel.stream,
//               builder: (context, snapshot) {
//                 return new Padding(
//                   padding: const EdgeInsets.symmetric(vertical: 24.0),
//                   child: new Text(snapshot.hasData ? '${snapshot.data}' : ''),
//                 );
//               },
//             )
//           ],
//         ),
//       ),
//       floatingActionButton: new FloatingActionButton(
//         onPressed: _sendMessage,
//         tooltip: 'Send message',
//         child: new Icon(Icons.send),
//       ), // This trailing comma makes auto-formatting nicer for build methods.
//     );
//   }

//   void _sendMessage() {
//     if (_controller.text.isNotEmpty) {
//       widget.channel.sink.add(_controller.text);
//     }
//   }

//   @override
//   void dispose() {
//     widget.channel.sink.close();
//     super.dispose();
//   }
// }










//=================
//Http 请求
//=================

// import 'dart:async';
// import 'dart:convert';

// import 'package:flutter/material.dart';
// import 'package:http/http.dart' as http;

// Future<Post> fetchPost() async {
//   final response =
//       await http.get('https://jsonplaceholder.typicode.com/posts/1');
//   final responseJson = json.decode(response.body);

//   return new Post.fromJson(responseJson);
// }

// class Post {
//   final int userId;
//   final int id;
//   final String title;
//   final String body;

//   Post({this.userId, this.id, this.title, this.body});

//   factory Post.fromJson(Map<String, dynamic> json) {
//     return new Post(
//       userId: json['userId'],
//       id: json['id'],
//       title: json['title'],
//       body: json['body'],
//     );
//   }
// }

// void main() => runApp(new MyApp());

// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     return new MaterialApp(
//       title: 'Fetch Data Example',
//       theme: new ThemeData(
//         primarySwatch: Colors.blue,
//       ),
//       home: new Scaffold(
//         appBar: new AppBar(
//           title: new Text('Fetch Data Example'),
//         ),
//         body: new Center(
//           child: new FutureBuilder<Post>(
//             future: fetchPost(),
//             builder: (context, snapshot) {
//               if (snapshot.hasData) {
//                 return new Text(snapshot.data.title);
//               } else if (snapshot.hasError) {
//                 return new Text("${snapshot.error}");
//               }

//               // By default, show a loading spinner
//               return new CircularProgressIndicator();
//             },
//           ),
//         ),
//       ),
//     );
//   }
// }



//=================
//页面之间传值
//=================


// import 'package:flutter/foundation.dart';
// import 'package:flutter/material.dart';

// class Todo {
//   final String title;
//   final String description;

//   Todo(this.title, this.description);
// }

// void main() {
//   runApp(new MaterialApp(
//     title: 'Passing Data',
//     home: new TodosScreen(
//       todos: new List.generate(
//         20,
//         (i) => new Todo(
//               'Todo $i',
//               'A description of what needs to be done for Todo $i',
//             ),
//       ),
//     ),
//   ));
// }

// class TodosScreen extends StatelessWidget {
//   final List<Todo> todos;

//   TodosScreen({Key key, @required this.todos}) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     return new Scaffold(
//       appBar: new AppBar(
//         title: new Text('Todos'),
//       ),
//       body: new ListView.builder(
//         itemCount: todos.length,
//         itemBuilder: (context, index) {
//           return new ListTile(
//             title: new Text(todos[index].title),
//             // When a user taps on the ListTile, navigate to the DetailScreen.
//             // Notice that we're not only creating a new DetailScreen, we're
//             // also passing the current todo through to it!
//             onTap: () {
//               Navigator.push(
//                 context,
//                 new MaterialPageRoute(
//                   builder: (context) => new DetailScreen(todo: todos[index]),
//                 ),
//               );
//             },
//           );
//         },
//       ),
//     );
//   }
// }

// class DetailScreen extends StatelessWidget {
//   // Declare a field that holds the Todo
//   final Todo todo;

//   // In the constructor, require a Todo
//   DetailScreen({Key key, @required this.todo}) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     // Use the Todo to create our UI
//     return new Scaffold(
//       appBar: new AppBar(
//         title: new Text("${todo.title}"),
//       ),
//       body: new Padding(
//         padding: new EdgeInsets.all(16.0),
//         child: new Text('${todo.description}'),
//       ),
//     );
//   }
// }








// import 'package:flutter/material.dart';

// void main() => runApp(new MyApp());

// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     final title = 'Gesture Demo';

//     return new MaterialApp(
//       title: title,
//       home: new MyHomePage(title: title),
//     );
//   }
// }

// class MyHomePage extends StatelessWidget {
//   final String title;

//   MyHomePage({Key key, this.title}) : super(key: key);

//   @override
//   Widget build(BuildContext context) {
//     return new Scaffold(
//       appBar: new AppBar(
//         title: new Text(title),
//       ),
//       body: new Center(child: new MyButton()),
//     );
//   }
// }

// class MyButton extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     // Our GestureDetector wraps our button
//     return new GestureDetector(
//       // When the child is tapped, show a snackbar
//       onTap: () {
//         final snackBar = new SnackBar(content: new Text("Tap"));

//         Scaffold.of(context).showSnackBar(snackBar);
//       },
//       // Our Custom Button!
//       child: new Container(
//         padding: new EdgeInsets.all(12.0),
//         decoration: new BoxDecoration(
//           color: Theme.of(context).buttonColor,
//           borderRadius: new BorderRadius.circular(8.0),
//         ),
//         child: new Text('My Button'),
//       ),
//     );
//   }
// }










//Grid View



// import 'package:flutter/material.dart';

// void main() {
//   runApp(new MyApp());
// }

// class MyApp extends StatelessWidget {
//   @override
//   Widget build(BuildContext context) {
//     final title = 'Grid List';

//     return new MaterialApp(
//       title: title,
//       home: new Scaffold(
//         appBar: new AppBar(
//           title: new Text(title),
//         ),
//         body: new GridView.count(
//           // Create a grid with 2 columns. If you change the scrollDirection to
//           // horizontal, this would produce 2 rows.
//           crossAxisCount: 2,
//           // Generate 100 Widgets that display their index in the List
//           children: new List.generate(100, (index) {
//             return new Center(
//               child: new Text(
//                 'Item $index',
//                 style: Theme.of(context).textTheme.headline,
//               ),
//             );
//           }),
//         ),
//       ),
//     );
//   }
// }
